version: "3.3"

services:
  db:
    image: mongo
    ports:
      - "27018:27017"
    command: mongod
    volumes:
      - ./db:/data/db
    logging:
      driver: none
  rabbit_mq_index:
    image: rabbitmq:3-management
    logging:
      driver: none
  redis_server_index:
    image: redis:alpine
    logging:
      driver: none
  zerodha_worker_index:
    build: ./zerodha_worker
    volumes:
      - ./zerodha_worker:/app
    command:
      ["sh", "./wait-for.sh", "rabbit_mq_index:5672", "--", "python", "app.py"]
    env_file:
      - .env
      - auth.env
    restart: always
  exit_worker_index:
    build: ./exit_worker
    volumes:
      - ./exit_worker:/app
    command:
      [
        "sh",
        "./wait-for.sh",
        "zerodha_worker_index:80",
        "--",
        "python",
        "app.py",
      ]
    env_file:
      - .env
      - auth.env
    restart: always
  scrapper:
    build: ./Scrapper
    volumes:
      - ./Scrapper:/app
    depends_on:
      - rabbit_mq_index
      - db
    command:
      ["sh", "./wait-for.sh", "rabbit_mq_index:5672", "--", "python", "app.py"]
    restart: always
  calculator:
    build: ./Calculator
    command:
      [
        "sh",
        "./wait-for.sh",
        "zerodha_worker_index:80",
        "--",
        "sh",
        "./wait-for.sh",
        "exit_worker_index:80",
        "--",
        "python",
        "app.py",
      ]
    volumes:
      - ./Calculator:/app
    depends_on:
      - scrapper
    restart: always
    env_file:
      - .env
      - auth.env
  compare:
    build: ./Compare
    command:
      ["sh", "./wait-for.sh", "rabbit_mq_index:5672", "--", "python", "app.py"]
    volumes:
      - ./Compare:/app
    depends_on:
      - calculator
    restart: always
    env_file:
      - .env
      - auth.env
  worker_4:
    build: ./worker_4
    command:
      [
        "sh",
        "./wait-for.sh",
        "zerodha_worker_index:80",
        "--",
        "sh",
        "./wait-for.sh",
        "exit_worker_index:80",
        "--",
        "python",
        "app.py",
      ]
    volumes:
      - ./worker_4:/app
    restart: always
    env_file:
      - .env
      - auth.env
    depends_on:
      - exit_worker_index
  # worker_5:
  #   build: ./worker_5
  #   command:
  #     [
  #       "sh",
  #       "./wait-for.sh",
  #       "zerodha_worker_index:80",
  #       "--",
  #       "sh",
  #       "./wait-for.sh",
  #       "exit_worker_index:80",
  #       "--",
  #       "python",
  #       "app.py",
  #     ]
  #   volumes:
  #     - ./worker_5:/app
  #   restart: always
  #   env_file:
  #     - .env
  #     - auth.env
  #   depends_on:
  #     - exit_worker_index
  worker_6:
    build: ./worker_6
    command:
      [
        "sh",
        "./wait-for.sh",
        "zerodha_worker_index:80",
        "--",
        "sh",
        "./wait-for.sh",
        "exit_worker_index:80",
        "--",
        "python",
        "app.py",
      ]
    volumes:
      - ./worker_6:/app
    restart: always
    env_file:
      - .env
      - auth.env
    depends_on:
      - exit_worker_index
  worker_8:
    build: ./worker_8
    command: [
        "sh",
        "./wait-for.sh",
        "zerodha_worker_index:80",
        "--",
        # "sh",
        # "./wait-for.sh",
        # "exit_worker_index:80",
        # "--",
        "python",
        "app.py",
      ]
    volumes:
      - ./worker_8:/app
    restart: always
    env_file:
      - .env
      - auth.env
    # depends_on:
    #   - exit_worker_index

# don't touch this
networks:
  default:
    external:
      name: auto-trade
